import type { RsdoctorPluginInstance, RsdoctorPluginOptionsNormalized, RsdoctorWebpackPluginOptions } from '@rsdoctor/core/types';
import { ChunkGraph, ModuleGraph } from '@rsdoctor/graph';
import { RsdoctorWebpackSDK } from '@rsdoctor/sdk';
import { Linter } from '@rsdoctor/types';
import type { Compiler } from 'webpack';
export declare class RsdoctorWebpackPlugin<Rules extends Linter.ExtendRuleData[]> implements RsdoctorPluginInstance<Compiler, Rules> {
    readonly name = "RsdoctorWebpackPlugin";
    readonly options: RsdoctorPluginOptionsNormalized<Rules>;
    readonly sdk: RsdoctorWebpackSDK;
    modulesGraph: ModuleGraph;
    private outsideInstance;
    _bootstrapTask: Promise<unknown>;
    protected browserIsOpened: boolean;
    chunkGraph: ChunkGraph;
    constructor(options?: RsdoctorWebpackPluginOptions<Rules>);
    apply(compiler: unknown): unknown;
    afterPlugins: (compiler: Compiler) => void;
    beforeRun: (compiler: Compiler) => Promise<void>;
    /**
     * @description Generate ModuleGraph and ChunkGraph from stats and webpack module apis;
     * @param {Compiler} compiler
     * @return {*}
     * @memberof RsdoctorWebpackPlugin
     */
    ensureModulesChunksGraphApplied(compiler: Compiler): void;
    done: () => Promise<void>;
}
//# sourceMappingURL=plugin.d.ts.map