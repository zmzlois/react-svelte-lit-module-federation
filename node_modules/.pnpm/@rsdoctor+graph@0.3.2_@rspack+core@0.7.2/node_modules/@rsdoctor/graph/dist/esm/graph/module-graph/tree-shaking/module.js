import { ExportInfo } from "./export";
import { SideEffect } from "./sideEffect";
import { Variable } from "./variable";
class ModuleGraphModule {
  constructor(module, graph, dynamic) {
    this.exports = [];
    this.sideEffects = [];
    this.variables = [];
    this.module = module;
    this._graph = graph;
    if (typeof this._dynamic === "boolean") {
      this._dynamic = dynamic;
    }
  }
  static init() {
    ExportInfo.init();
    SideEffect.init();
    Variable.init();
  }
  get dynamic() {
    if (typeof this._dynamic === "boolean") {
      return this._dynamic;
    }
    return this.module.getImported().map((item) => item.getDependencyByModule(this.module)).some((item) => item && item.meta.exportsType === "dynamic");
  }
  addExportInfo(data) {
    this.exports.push(data);
    this._graph.addExportInfo(data);
  }
  addSideEffect(data) {
    this.sideEffects.push(data);
    this._graph.addSideEffect(data);
  }
  addVariable(data) {
    this.variables.push(data);
    this._graph.addVariable(data);
  }
  getExports() {
    return this.exports.slice();
  }
  getSideEffects(name) {
    if (name) {
      return this.sideEffects.filter((item) => item.name === name);
    }
    return this.sideEffects.slice();
  }
  getOwnExports() {
    return this.exports.filter((item) => !item.isReExport);
  }
  getExport(name) {
    return this.exports.find((item) => item.name === name);
  }
  getReExports() {
    return this.exports.filter((item) => item.isReExport);
  }
  getOwnExport(name) {
    return this.getOwnExports().find((item) => item.name === name);
  }
  getReExport(name) {
    return this.getReExports().find((item) => item.name === name);
  }
  toData() {
    return {
      module: this.module.id,
      dynamic: this.dynamic,
      exports: this.exports.map((item) => item.id),
      sideEffects: this.sideEffects.map((item) => item.id),
      variables: this.variables.map((item) => item.id)
    };
  }
}
export {
  ModuleGraphModule
};
