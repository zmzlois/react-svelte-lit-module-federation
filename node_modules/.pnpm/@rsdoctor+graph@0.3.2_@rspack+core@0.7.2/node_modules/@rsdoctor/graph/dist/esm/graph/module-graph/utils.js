import { last, isUndefined, isNil } from "lodash";
function isSamePosition(po1, po2) {
  return po1.line === po2.line && po1.column === po2.column;
}
function isSameRange(po1, po2) {
  if (!isSamePosition(po1.start, po2.start)) {
    return false;
  }
  if (!isNil(po1.end) && !isNil(po2.end)) {
    return isSamePosition(po1.end, po2.end);
  }
  return isUndefined(po1.end) && isUndefined(po2.end);
}
const NAME_WITH_LOADERS = /!/;
const NAME_WITH_MODULES = /\s\+\s\d*\smodules$/;
const INVALID_CSS_PREFIX = /^css\s.*node_modules(?!\/)/;
function getModuleName(name) {
  if (!name) {
    return "";
  }
  if (NAME_WITH_LOADERS.test(name)) {
    const normalizedName = last(name.split(NAME_WITH_LOADERS));
    if (normalizedName?.trim()) {
      return normalizedName;
    }
  }
  if (NAME_WITH_MODULES.test(name)) {
    return name.replace(NAME_WITH_MODULES, "");
  }
  if (INVALID_CSS_PREFIX.test(name)) {
    return name.replace(INVALID_CSS_PREFIX, "");
  }
  return name;
}
export {
  getModuleName,
  isSamePosition,
  isSameRange
};
