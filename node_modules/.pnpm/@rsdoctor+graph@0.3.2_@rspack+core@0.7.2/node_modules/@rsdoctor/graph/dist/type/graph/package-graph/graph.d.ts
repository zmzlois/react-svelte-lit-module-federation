import { SDK } from '@rsdoctor/types';
import type { ModuleGraph, Module } from '../module-graph';
import { Package } from './package';
import { PackageDependency } from './dependency';
export declare class PackageGraph implements SDK.PackageGraphInstance {
    static fromModuleGraph(graph: ModuleGraph, root: string, getPackageFile?: SDK.GetPackageFile): PackageGraph;
    private _root;
    private _dependencies;
    private _packages;
    private _pkgNameMap;
    private _pkgFileMap;
    constructor(root: string);
    getPackages(): Package[];
    getPackageByModule(module: Module, readFile?: SDK.GetPackageFile): Package | undefined;
    getPackageByFile(file: string): Package | undefined;
    getPackageContainFile(file: string): Package | undefined;
    getPackagesByName(name: string): Package[];
    getPackageByData(data: SDK.PackageBasicData): Package | undefined;
    addPackage(pkg: Package): void;
    getDependenciesFromPackage(pkg: Package): PackageDependency[];
    addDependency(dep: PackageDependency): void;
    getDependenciesFromOrigin(): PackageDependency[];
    getDuplicatePackages(): Package[][];
    toData(): SDK.PackageGraphData;
}
//# sourceMappingURL=graph.d.ts.map