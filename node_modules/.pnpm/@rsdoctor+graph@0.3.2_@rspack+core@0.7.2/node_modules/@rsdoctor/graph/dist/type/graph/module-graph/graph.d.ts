import { SDK } from '@rsdoctor/types';
import { Dependency } from './dependency';
import { Module } from './module';
import { ModuleGraphModule, ExportInfo, SideEffect, Variable } from './tree-shaking';
export declare class ModuleGraph implements SDK.ModuleGraphInstance {
    static init(): void;
    static fromData(data: Partial<SDK.ModuleGraphData>): ModuleGraph;
    private _dependenciesIdMap;
    private _moduleWebpackIdMap;
    private _moduleIdMap;
    private _moduleGraphModules;
    private _exportIdMap;
    private _sideEffectIdMap;
    private _varIdMap;
    clear(): void;
    size(): number;
    fromInstance(data: ModuleGraph): void;
    getSubGraphByModule(module: Module): Module[];
    getModules(): Module[];
    getDependencies(): Dependency[];
    getEntryModules(): Module[];
    getModuleById(id: number): Module | undefined;
    getDependencyById(id: number): Dependency | undefined;
    getModuleByWebpackId(id: string): Module | undefined;
    getModuleByFile(file: string): Module | undefined;
    addModule(...modules: Module[]): void;
    addDependency(...deps: Dependency[]): void;
    removeModule(module: Module): void;
    removeDependency(dep: Dependency): void;
    addModuleGraphModule(mgm: ModuleGraphModule): void;
    getModuleGraphModule(module: Module): ModuleGraphModule;
    getModuleGraphModules(): ModuleGraphModule[];
    addExportInfo(data: ExportInfo): void;
    addSideEffect(data: SideEffect): void;
    addVariable(data: Variable): void;
    toData(configs?: SDK.ModuleGraphToDataArgs): SDK.ModuleGraphData;
    toCodeData(type?: SDK.ToDataType): SDK.ModuleCodeData;
}
//# sourceMappingURL=graph.d.ts.map