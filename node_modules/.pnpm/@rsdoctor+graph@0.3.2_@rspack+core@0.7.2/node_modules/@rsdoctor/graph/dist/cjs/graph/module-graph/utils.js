"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var utils_exports = {};
__export(utils_exports, {
  getModuleName: () => getModuleName,
  isSamePosition: () => isSamePosition,
  isSameRange: () => isSameRange
});
module.exports = __toCommonJS(utils_exports);
var import_lodash = require("lodash");
function isSamePosition(po1, po2) {
  return po1.line === po2.line && po1.column === po2.column;
}
function isSameRange(po1, po2) {
  if (!isSamePosition(po1.start, po2.start)) {
    return false;
  }
  if (!(0, import_lodash.isNil)(po1.end) && !(0, import_lodash.isNil)(po2.end)) {
    return isSamePosition(po1.end, po2.end);
  }
  return (0, import_lodash.isUndefined)(po1.end) && (0, import_lodash.isUndefined)(po2.end);
}
const NAME_WITH_LOADERS = /!/;
const NAME_WITH_MODULES = /\s\+\s\d*\smodules$/;
const INVALID_CSS_PREFIX = /^css\s.*node_modules(?!\/)/;
function getModuleName(name) {
  if (!name) {
    return "";
  }
  if (NAME_WITH_LOADERS.test(name)) {
    const normalizedName = (0, import_lodash.last)(name.split(NAME_WITH_LOADERS));
    if (normalizedName?.trim()) {
      return normalizedName;
    }
  }
  if (NAME_WITH_MODULES.test(name)) {
    return name.replace(NAME_WITH_MODULES, "");
  }
  if (INVALID_CSS_PREFIX.test(name)) {
    return name.replace(INVALID_CSS_PREFIX, "");
  }
  return name;
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getModuleName,
  isSamePosition,
  isSameRange
});
