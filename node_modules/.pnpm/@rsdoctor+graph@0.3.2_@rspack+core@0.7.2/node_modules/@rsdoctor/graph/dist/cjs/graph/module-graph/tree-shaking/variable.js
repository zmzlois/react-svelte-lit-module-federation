"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var variable_exports = {};
__export(variable_exports, {
  Variable: () => Variable
});
module.exports = __toCommonJS(variable_exports);
let id = 1;
class Variable {
  constructor(name, module2, usedInfo, identifier) {
    this.id = id++;
    this.name = name;
    this.module = module2;
    this.usedInfo = usedInfo;
    this.identifier = identifier;
  }
  static init() {
    id = 1;
  }
  get isUsed() {
    return this._exported ? this._exported.getSideEffects().length > 0 : false;
  }
  setExportInfo(info) {
    this._exported = info;
    info.variable = this;
  }
  getExportInfo() {
    return this._exported;
  }
  toData() {
    const data = {
      id: this.id,
      name: this.name,
      module: this.module.id,
      identifier: this.identifier.toData(),
      usedInfo: this.usedInfo
    };
    if (this._exported) {
      data.exported = this._exported.id;
    }
    return data;
  }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Variable
});
