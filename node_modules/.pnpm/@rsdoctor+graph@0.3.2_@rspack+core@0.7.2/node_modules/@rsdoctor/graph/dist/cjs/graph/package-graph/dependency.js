"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var dependency_exports = {};
__export(dependency_exports, {
  PackageDependency: () => PackageDependency
});
module.exports = __toCommonJS(dependency_exports);
let id = 1;
class PackageDependency {
  constructor(pack, dep, refDependency) {
    this.id = id++;
    this.package = pack;
    this.dependency = dep;
    this.refDependency = refDependency;
  }
  get name() {
    return this.dependency.name;
  }
  get version() {
    return this.dependency.version;
  }
  get root() {
    return this.dependency.root;
  }
  isSame(dep) {
    return this.refDependency === dep.refDependency && this.dependency.isSame(dep.dependency);
  }
  toData() {
    return {
      id: this.id,
      dependency: this.dependency.id,
      package: this.package.id,
      refDependency: this.refDependency.id
    };
  }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  PackageDependency
});
