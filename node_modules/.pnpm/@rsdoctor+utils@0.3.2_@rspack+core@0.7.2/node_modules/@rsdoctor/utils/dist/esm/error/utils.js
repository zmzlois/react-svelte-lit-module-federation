import { Err } from "@rsdoctor/types";
function toLevel(level) {
  return Err.ErrorLevel[level];
}
function insertSpace(rawLines, line, width) {
  const lines = rawLines.split("\n");
  lines[line - 1] = Array(width).fill(" ").join("") + lines[line - 1];
  return lines.join("\n");
}
function printErrors({ errors, warnings }, logLevel = "Error") {
  const onlyError = logLevel === "Error";
  if (logLevel === "Silent") {
    return "";
  }
  if (onlyError && errors.length === 0 || !onlyError && errors.length === 0 && warnings.length === 0) {
    return "";
  }
  const msgs = [];
  if (onlyError) {
    msgs.push(
      `Build failed with ${errors.length} error:`,
      ...errors.map((item) => item.toString()),
      ""
    );
  } else {
    const title = errors.length === 0 ? `Build succuss with ${warnings.length} warning:` : `Build failed with ${errors.length} error, ${warnings.length} warning:`;
    msgs.push(
      title,
      ...errors.map((item) => item.toString()),
      ...warnings.map((item) => item.toString()),
      ""
    );
  }
  return msgs.join("\n\n");
}
export {
  insertSpace,
  printErrors,
  toLevel
};
