"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var chunk_exports = {};
__export(chunk_exports, {
  getChunkByChunkId: () => getChunkByChunkId,
  getChunkIdsByAsset: () => getChunkIdsByAsset,
  getChunksByAsset: () => getChunksByAsset,
  getChunksByChunkIds: () => getChunksByChunkIds,
  getChunksByModule: () => getChunksByModule,
  getChunksByModuleId: () => getChunksByModuleId
});
module.exports = __toCommonJS(chunk_exports);
function getChunkIdsByAsset(asset) {
  if (asset.chunks) {
    return asset.chunks;
  }
  return [];
}
function getChunksByModule(module2, chunks) {
  if (module2.chunks.length) {
    return getChunksByChunkIds(module2.chunks, chunks);
  }
  return [];
}
function getChunkByChunkId(chunkId, chunks) {
  return chunks.find((e) => e.id === chunkId);
}
function getChunksByChunkIds(chunkIds, chunks) {
  if (chunkIds.length) {
    return chunkIds.map((id) => getChunkByChunkId(id, chunks)).filter(Boolean);
  }
  return [];
}
function getChunksByAsset(asset, chunks) {
  return getChunksByChunkIds(getChunkIdsByAsset(asset), chunks);
}
function getChunksByModuleId(id, modules, chunks) {
  const mod = modules.find((e) => e.id === id);
  if (!mod)
    return [];
  return getChunksByModule(mod, chunks);
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getChunkByChunkId,
  getChunkIdsByAsset,
  getChunksByAsset,
  getChunksByChunkIds,
  getChunksByModule,
  getChunksByModuleId
});
