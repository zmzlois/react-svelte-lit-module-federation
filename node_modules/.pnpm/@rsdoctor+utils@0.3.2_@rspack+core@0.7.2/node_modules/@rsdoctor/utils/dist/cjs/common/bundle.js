"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var bundle_exports = {};
__export(bundle_exports, {
  getBundleDiffPageQueryString: () => getBundleDiffPageQueryString,
  getBundleDiffPageUrl: () => getBundleDiffPageUrl,
  parseFilesFromBundlePageUrlQuery: () => parseFilesFromBundlePageUrlQuery
});
module.exports = __toCommonJS(bundle_exports);
var import_types = require("@rsdoctor/types");
const sep = ",";
function getBundleDiffPageQueryString(files) {
  let qs = encodeURIComponent(files.join(sep));
  if (qs) {
    qs = `?${import_types.Client.RsdoctorClientUrlQuery.BundleDiffFiles}=${qs}`;
  }
  return qs;
}
function getBundleDiffPageUrl(files) {
  let qs = getBundleDiffPageQueryString(files);
  if (process.env.NODE_ENV === "development") {
    if (typeof location !== "undefined") {
      const { search = "", origin } = location;
      if (search) {
        qs += `&${search.slice(1)}`;
      }
      return `${origin}${qs}#${import_types.Client.RsdoctorClientRoutes.BundleDiff}`;
    }
  }
  return `${qs}#${import_types.Client.RsdoctorClientRoutes.BundleDiff}`;
}
function parseFilesFromBundlePageUrlQuery(queryValue) {
  return decodeURIComponent(queryValue).split(sep);
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getBundleDiffPageQueryString,
  getBundleDiffPageUrl,
  parseFilesFromBundlePageUrlQuery
});
