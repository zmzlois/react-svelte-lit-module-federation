"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var time_exports = {};
__export(time_exports, {
  formatCosts: () => formatCosts,
  getCurrentTimestamp: () => getCurrentTimestamp,
  getUnit: () => getUnit,
  toFixedDigits: () => toFixedDigits
});
module.exports = __toCommonJS(time_exports);
var import_process = require("process");
function toFixedDigits(num, digits = 2) {
  if (digits === 0) {
    return Math.floor(num);
  }
  return +num.toFixed(digits);
}
function getUnit(num, type) {
  let unit;
  if (type === "m") {
    unit = num > 1 ? "mins" : "min";
  } else {
    unit = num > 1 ? "hours" : "hour";
  }
  return unit;
}
function formatCosts(costs) {
  costs = Number(costs);
  if (costs >= 1e3) {
    const sec = costs / 1e3;
    if (sec >= 60) {
      let mins = sec / 60;
      if (mins >= 60) {
        const hours = toFixedDigits(mins / 60, 0);
        const restMins = toFixedDigits(mins % 60, 1);
        const hUnit = getUnit(hours, "h");
        if (restMins > 0) {
          return `${hours}${hUnit} ${restMins}${getUnit(restMins, "m")}`;
        }
        return `${hours}${hUnit}`;
      }
      mins = toFixedDigits(mins, 0);
      const mUnit = getUnit(mins, "m");
      const restSec = toFixedDigits(sec % 60, 0);
      if (restSec > 0) {
        return `${mins}${mUnit} ${restSec}s`;
      }
      return `${mins}${mUnit}`;
    }
    return `${toFixedDigits(sec, 1)}s`;
  }
  if (costs >= 10) {
    return `${+toFixedDigits(costs, 0)}ms`;
  }
  if (costs >= 1) {
    return `${+toFixedDigits(costs, 1)}ms`;
  }
  let r = +toFixedDigits(costs, 2);
  if (r === 0) {
    r = +toFixedDigits(costs, 3);
  }
  return `${r}ms`;
}
function getCurrentTimestamp(start, startHRTime) {
  const endHRTime = (0, import_process.hrtime)(startHRTime);
  const end = start + endHRTime[0] * 1e3 + (process.env.VITEST ? Math.round(endHRTime[1] / 1e6) : endHRTime[1] / 1e6);
  return end;
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  formatCosts,
  getCurrentTimestamp,
  getUnit,
  toFixedDigits
});
