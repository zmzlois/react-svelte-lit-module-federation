"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var alerts_exports = {};
__export(alerts_exports, {
  getPackageRelationAlertDetails: () => getPackageRelationAlertDetails
});
module.exports = __toCommonJS(alerts_exports);
var import_path = require("path");
function getPackageRelationAlertDetails(modules, dependencies, root, packageDependencies, moduleCodeMap) {
  return packageDependencies.slice().reverse().map((dep) => {
    const dependency = dependencies.find(
      (item) => item.id === dep.dependencyId
    );
    if (!dependency) {
      return null;
    }
    const module2 = modules.find((item) => item.id === dependency.module);
    if (!module2) {
      return null;
    }
    return {
      group: dep.group,
      module: module2,
      dependency,
      relativePath: (0, import_path.relative)(root, module2.path),
      moduleCode: moduleCodeMap?.[module2.id]
    };
  }).filter(Boolean);
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getPackageRelationAlertDetails
});
