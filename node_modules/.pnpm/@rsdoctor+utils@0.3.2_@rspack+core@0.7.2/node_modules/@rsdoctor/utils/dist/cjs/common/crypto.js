"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var crypto_exports = {};
__export(crypto_exports, {
  decode: () => decode,
  encode: () => encode
});
module.exports = __toCommonJS(crypto_exports);
const sep = "!";
function encode(str) {
  let res = `${str.charCodeAt(0)}`;
  for (let i = 1; i < str.length; i++) {
    res += `${sep}${str.charCodeAt(i)}`;
  }
  return res;
}
function decode(str) {
  let res = "";
  let tmp = "";
  for (let i = 0; i < str.length; i++) {
    if (str[i] === sep) {
      res += String.fromCharCode(+tmp);
      tmp = "";
    } else {
      tmp += str[i];
    }
  }
  if (tmp) {
    res += String.fromCharCode(+tmp);
  }
  return res;
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  decode,
  encode
});
