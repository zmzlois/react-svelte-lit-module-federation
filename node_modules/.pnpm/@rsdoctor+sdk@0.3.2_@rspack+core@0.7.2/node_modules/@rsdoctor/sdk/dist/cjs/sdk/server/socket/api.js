"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var api_exports = {};
__export(api_exports, {
  SocketAPILoader: () => SocketAPILoader
});
module.exports = __toCommonJS(api_exports);
var import_common = require("@rsdoctor/utils/common");
class SocketAPILoader {
  constructor(options) {
    this.options = options;
    this.dataLoader = new import_common.Data.APIDataLoader(this);
  }
  async loadManifest() {
    return this.options.sdk.getManifestData();
  }
  async loadData(key) {
    const data = this.options.sdk.getStoreData();
    const sep = ".";
    let res = data[key];
    if (key.includes(sep)) {
      res = key.split(sep).reduce((t, k) => t[k], data);
    }
    return res;
  }
  get loadAPIData() {
    return this.dataLoader.loadAPI;
  }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  SocketAPILoader
});
