"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var project_exports = {};
__export(project_exports, {
  ProjectAPI: () => ProjectAPI
});
module.exports = __toCommonJS(project_exports);
var import_types = require("@rsdoctor/types");
var import_ip = __toESM(require("ip"));
var import_base = require("./base");
var import_router = require("../router");
class ProjectAPI extends import_base.BaseAPI {
  async env() {
    const { server } = this.ctx;
    return {
      ip: import_ip.default.address(),
      port: server.port
    };
  }
  async manifest() {
    const { sdk } = this.ctx;
    const data = sdk.getManifestData();
    return JSON.stringify(data);
  }
  async getProjectInfo() {
    return this.dataLoader.loadAPI(import_types.SDK.ServerAPI.API.GetProjectInfo);
  }
  async getClientRoutes() {
    return this.dataLoader.loadAPI(import_types.SDK.ServerAPI.API.GetClientRoutes);
  }
}
__decorateClass([
  import_router.Router.get(import_types.SDK.ServerAPI.API.Env)
], ProjectAPI.prototype, "env", 1);
__decorateClass([
  import_router.Router.get(import_types.SDK.ServerAPI.API.Manifest)
], ProjectAPI.prototype, "manifest", 1);
__decorateClass([
  import_router.Router.post(import_types.SDK.ServerAPI.API.GetProjectInfo)
], ProjectAPI.prototype, "getProjectInfo", 1);
__decorateClass([
  import_router.Router.post(import_types.SDK.ServerAPI.API.GetClientRoutes)
], ProjectAPI.prototype, "getClientRoutes", 1);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  ProjectAPI
});
