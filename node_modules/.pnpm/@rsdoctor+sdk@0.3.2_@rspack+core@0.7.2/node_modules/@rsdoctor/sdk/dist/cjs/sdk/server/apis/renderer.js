"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var renderer_exports = {};
__export(renderer_exports, {
  RendererAPI: () => RendererAPI
});
module.exports = __toCommonJS(renderer_exports);
var import_types = require("@rsdoctor/types");
var import_serve_static = __toESM(require("serve-static"));
var import_path = __toESM(require("path"));
var import_build = require("@rsdoctor/utils/build");
var import_base = require("./base");
var import_router = require("../router");
class RendererAPI extends import_base.BaseAPI {
  constructor() {
    super(...arguments);
    this.isClientServed = false;
  }
  async entryHtml() {
    const { server, res } = this.ctx;
    const clientHtmlPath = server.innerClientPath ? server.innerClientPath : require.resolve("@rsdoctor/client");
    if (!this.isClientServed) {
      this.isClientServed = true;
      const clientDistPath = import_path.default.resolve(clientHtmlPath, "..");
      server.app.use((0, import_serve_static.default)(clientDistPath));
    }
    const clientHtml = await import_build.File.fse.readFile(clientHtmlPath, "utf-8");
    res.setHeader("Content-Type", "text/html");
    res.setHeader("Cache-Control", "no-store");
    return clientHtml;
  }
}
__decorateClass([
  import_router.Router.get(import_types.SDK.ServerAPI.API.EntryHtml)
], RendererAPI.prototype, "entryHtml", 1);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  RendererAPI
});
