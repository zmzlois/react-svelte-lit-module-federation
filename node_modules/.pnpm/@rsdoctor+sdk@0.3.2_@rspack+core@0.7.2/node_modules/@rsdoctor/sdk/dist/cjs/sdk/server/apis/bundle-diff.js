"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
var bundle_diff_exports = {};
__export(bundle_diff_exports, {
  BundleDiffAPI: () => BundleDiffAPI
});
module.exports = __toCommonJS(bundle_diff_exports);
var import_types = require("@rsdoctor/types");
var import_base = require("./base");
var import_router = require("../router");
class BundleDiffAPI extends import_base.BaseAPI {
  async getBundleDiffSummary() {
    const { sdk } = this.ctx;
    const {
      root,
      hash,
      errors,
      chunkGraph,
      moduleGraph,
      packageGraph,
      configs,
      moduleCodeMap,
      // Just usedby bytedance's inner Rsdoctor
      cloudManifestUrl
    } = sdk.getStoreData();
    let outputFilename = "";
    if (typeof configs?.[0]?.config?.output?.filename === "string") {
      outputFilename = configs?.[0]?.config?.output?.filename;
    }
    return {
      root,
      hash,
      errors,
      chunkGraph,
      moduleGraph,
      packageGraph,
      outputFilename,
      moduleCodeMap,
      // Just usedby bytedance's inner Rsdoctor
      cloudManifestUrl
    };
  }
  async bundleDiffManifest() {
    const { sdk } = this.ctx;
    const data = sdk.getStoreData();
    return data;
  }
}
__decorateClass([
  import_router.Router.get(import_types.SDK.ServerAPI.API.GetBundleDiffSummary)
], BundleDiffAPI.prototype, "getBundleDiffSummary", 1);
__decorateClass([
  import_router.Router.get(import_types.SDK.ServerAPI.API.BundleDiffManifest)
], BundleDiffAPI.prototype, "bundleDiffManifest", 1);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  BundleDiffAPI
});
