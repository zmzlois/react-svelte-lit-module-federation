"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var parser_exports = {};
__export(parser_exports, {
  hasSetEsModuleStatement: () => hasSetEsModuleStatement
});
module.exports = __toCommonJS(parser_exports);
var import_ruleUtils = require("@rsdoctor/utils/ruleUtils");
const esmLabelStatement = import_ruleUtils.parser.internal.parseExpressionAt(
  'Object.defineProperty(exports, "__esModule", { value: true })',
  0,
  {
    ecmaVersion: 6,
    ranges: false,
    locations: false,
    sourceType: "script"
  }
);
function hasSetEsModuleStatement(program) {
  const expressions = program.body.filter(import_ruleUtils.parser.asserts.isExpressionStatement).map((item) => item.expression).filter(import_ruleUtils.parser.asserts.isSimpleCallExpression);
  return expressions.some(
    (exp) => import_ruleUtils.parser.utils.isSameSemantics(exp, esmLabelStatement)
  );
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  hasSetEsModuleStatement
});
