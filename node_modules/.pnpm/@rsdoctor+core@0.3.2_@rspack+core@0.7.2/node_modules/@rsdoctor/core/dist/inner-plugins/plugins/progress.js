"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var progress_exports = {};
__export(progress_exports, {
  InternalProgressPlugin: () => InternalProgressPlugin
});
module.exports = __toCommonJS(progress_exports);
var import_types = require("@rsdoctor/types");
var import_base = require("./base");
class InternalProgressPlugin extends import_base.InternalBasePlugin {
  constructor() {
    super(...arguments);
    this.name = "progress";
    this.currentProgress = {
      percentage: 100,
      message: ""
    };
  }
  apply(compiler) {
    const { sdk, currentProgress } = this;
    if (compiler.webpack && compiler.webpack.ProgressPlugin) {
      const progress = new compiler.webpack.ProgressPlugin({
        handler(percentage, msg) {
          currentProgress.percentage = percentage;
          currentProgress.message = msg || "";
          const api = import_types.SDK.ServerAPI.APIExtends.GetCompileProgess;
          sdk.server.sendAPIDataToClient(api, {
            req: {
              api,
              body: void 0
            },
            res: currentProgress
          });
        }
      });
      progress.apply(compiler);
    }
  }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  InternalProgressPlugin
});
