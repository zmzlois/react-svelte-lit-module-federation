"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var circleDetect_exports = {};
__export(circleDetect_exports, {
  checkCirclePath: () => checkCirclePath
});
module.exports = __toCommonJS(circleDetect_exports);
const checkCirclePath = (obj, record, res, level, maxLevel = 3) => {
  const idx = record.slice(0, record.length - 1).findIndex((v) => v.ref === obj);
  if (idx !== -1) {
    const key = record.map((v) => v.prop);
    if (res.indexOf(key) < 0) {
      res.push(key);
      return;
    }
  }
  if (typeof obj === "object" && obj !== null && level < maxLevel) {
    for (const [k, v] of Object.entries(obj)) {
      checkCirclePath(v, [...record, { prop: k, ref: v }], res, level + 1);
    }
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  checkCirclePath
});
