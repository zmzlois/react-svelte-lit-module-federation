import type { Compiler } from '@rspack/core';
import { ModuleGraph } from '@rsdoctor/graph';
import { RsdoctorSlaveSDK, RsdoctorWebpackSDK } from '@rsdoctor/sdk';
import type { RsdoctorPluginInstance, RsdoctorPluginOptionsNormalized, RsdoctorRspackPluginOptions } from '@rsdoctor/core';
import { Linter } from '@rsdoctor/types';
export declare class RsdoctorRspackPlugin<Rules extends Linter.ExtendRuleData[]> implements RsdoctorPluginInstance<Compiler, Rules> {
    readonly name = "RsdoctorRspackPlugin";
    readonly sdk: RsdoctorWebpackSDK | RsdoctorSlaveSDK;
    _bootstrapTask: Promise<unknown>;
    protected browserIsOpened: boolean;
    modulesGraph: ModuleGraph;
    options: RsdoctorPluginOptionsNormalized<Rules>;
    outsideInstance: boolean;
    constructor(options?: RsdoctorRspackPluginOptions<Rules>);
    apply(compiler: unknown): unknown;
    /**
     * @description Generate ModuleGraph and ChunkGraph from stats and webpack module apis;
     * @param {Compiler} compiler
     * @return {*}
     * @memberof RsdoctorWebpackPlugin
     */
    ensureModulesChunksGraphApplied(compiler: Compiler): void;
    done: (compiler: Compiler) => Promise<void>;
    getRspackConfig(compiler: Compiler): void;
}
//# sourceMappingURL=plugin.d.ts.map