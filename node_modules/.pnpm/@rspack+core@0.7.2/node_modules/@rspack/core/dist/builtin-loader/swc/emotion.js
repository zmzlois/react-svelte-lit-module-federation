"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.resolveEmotion = void 0;
function resolveEmotion(emotion, isProduction) {
    if (!emotion) {
        return undefined;
    }
    if (emotion === true) {
        emotion = {};
    }
    const autoLabel = emotion?.autoLabel ?? "dev-only";
    const emotionConfig = {
        enabled: true,
        // @ts-expect-error autoLabel is string for JavaScript interface, however is boolean for Rust interface
        autoLabel: autoLabel === "dev-only" ? !isProduction : autoLabel === "always",
        importMap: emotion?.importMap,
        labelFormat: emotion?.labelFormat ?? "[local]",
        sourcemap: isProduction ? false : emotion?.sourceMap ?? true
    };
    return emotionConfig;
}
exports.resolveEmotion = resolveEmotion;
