import { BuiltinPluginName, RawHtmlRspackPluginOptions } from "@rspack/binding";
import { z } from "../../compiled/zod";
declare const htmlRspackPluginOptions: z.ZodObject<{
    filename: z.ZodOptional<z.ZodString>;
    template: z.ZodOptional<z.ZodString>;
    templateContent: z.ZodOptional<z.ZodString>;
    templateParameters: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    inject: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["head", "body"]>, z.ZodBoolean]>>;
    publicPath: z.ZodOptional<z.ZodString>;
    scriptLoading: z.ZodOptional<z.ZodEnum<["blocking", "defer", "module"]>>;
    chunks: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    excludedChunks: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    sri: z.ZodOptional<z.ZodEnum<["sha256", "sha384", "sha512"]>>;
    minify: z.ZodOptional<z.ZodBoolean>;
    title: z.ZodOptional<z.ZodString>;
    favicon: z.ZodOptional<z.ZodString>;
    meta: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodRecord<z.ZodString, z.ZodString>]>>>;
}, "strict", z.ZodTypeAny, {
    filename?: string | undefined;
    template?: string | undefined;
    templateContent?: string | undefined;
    templateParameters?: Record<string, string> | undefined;
    inject?: boolean | "head" | "body" | undefined;
    publicPath?: string | undefined;
    scriptLoading?: "module" | "blocking" | "defer" | undefined;
    chunks?: string[] | undefined;
    excludedChunks?: string[] | undefined;
    sri?: "sha256" | "sha384" | "sha512" | undefined;
    minify?: boolean | undefined;
    title?: string | undefined;
    favicon?: string | undefined;
    meta?: Record<string, string | Record<string, string>> | undefined;
}, {
    filename?: string | undefined;
    template?: string | undefined;
    templateContent?: string | undefined;
    templateParameters?: Record<string, string> | undefined;
    inject?: boolean | "head" | "body" | undefined;
    publicPath?: string | undefined;
    scriptLoading?: "module" | "blocking" | "defer" | undefined;
    chunks?: string[] | undefined;
    excludedChunks?: string[] | undefined;
    sri?: "sha256" | "sha384" | "sha512" | undefined;
    minify?: boolean | undefined;
    title?: string | undefined;
    favicon?: string | undefined;
    meta?: Record<string, string | Record<string, string>> | undefined;
}>;
export type HtmlRspackPluginOptions = z.infer<typeof htmlRspackPluginOptions>;
export declare const HtmlRspackPlugin: {
    new (c?: {
        filename?: string | undefined;
        template?: string | undefined;
        templateContent?: string | undefined;
        templateParameters?: Record<string, string> | undefined;
        inject?: boolean | "head" | "body" | undefined;
        publicPath?: string | undefined;
        scriptLoading?: "module" | "blocking" | "defer" | undefined;
        chunks?: string[] | undefined;
        excludedChunks?: string[] | undefined;
        sri?: "sha256" | "sha384" | "sha512" | undefined;
        minify?: boolean | undefined;
        title?: string | undefined;
        favicon?: string | undefined;
        meta?: Record<string, string | Record<string, string>> | undefined;
    } | undefined): {
        name: BuiltinPluginName;
        _options: RawHtmlRspackPluginOptions;
        affectedHooks: "make" | "compile" | "emit" | "afterEmit" | "invalid" | "done" | "thisCompilation" | "afterDone" | "compilation" | "normalModuleFactory" | "contextModuleFactory" | "initialize" | "shouldEmit" | "infrastructureLog" | "beforeRun" | "run" | "assetEmitted" | "failed" | "shutdown" | "watchRun" | "watchClose" | "environment" | "afterEnvironment" | "afterPlugins" | "afterResolvers" | "beforeCompile" | "afterCompile" | "finishMake" | "entryOption" | undefined;
        raw(): import("@rspack/binding").BuiltinPlugin;
        apply(compiler: import("../Compiler").Compiler): void;
    };
};
export {};
