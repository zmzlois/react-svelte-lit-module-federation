import { BuiltinPluginName, JsModule, RawRegex } from "@rspack/binding";
export declare const BuiltinLazyCompilationPlugin: {
    new (module: (args: {
        module: string;
        path: string;
    }) => {
        active: boolean;
        data: string;
        client: string;
    }, cacheable: boolean, entries: boolean, imports: boolean, test?: RawRegex | ((m: JsModule) => boolean) | undefined): {
        name: BuiltinPluginName;
        _options: {
            module: (args: {
                module: string;
                path: string;
            }) => {
                active: boolean;
                data: string;
                client: string;
            };
            cacheable: boolean;
            imports: boolean;
            entries: boolean;
            test: RawRegex | ((m: JsModule) => boolean) | undefined;
        };
        affectedHooks: "make" | "compile" | "emit" | "afterEmit" | "invalid" | "done" | "thisCompilation" | "afterDone" | "compilation" | "normalModuleFactory" | "contextModuleFactory" | "initialize" | "shouldEmit" | "infrastructureLog" | "beforeRun" | "run" | "assetEmitted" | "failed" | "shutdown" | "watchRun" | "watchClose" | "environment" | "afterEnvironment" | "afterPlugins" | "afterResolvers" | "beforeCompile" | "afterCompile" | "finishMake" | "entryOption" | undefined;
        raw(): import("@rspack/binding").BuiltinPlugin;
        apply(compiler: import("../../Compiler").Compiler): void;
    };
};
