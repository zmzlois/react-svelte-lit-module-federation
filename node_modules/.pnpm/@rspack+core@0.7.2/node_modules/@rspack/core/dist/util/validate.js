"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isValidate = exports.validate = void 0;
const zod_validation_error_1 = require("../../compiled/zod-validation-error");
function validate(opts, schema) {
    const res = schema.safeParse(opts);
    if (!res.success) {
        const strategy = process.env.RSPACK_CONFIG_VALIDATE ?? "strict";
        if (strategy === "loose-silent")
            return;
        const issueSeparator = "$issue$";
        const prefixSeparator = "$prefix$";
        const validationErr = (0, zod_validation_error_1.fromZodError)(res.error, {
            prefix: "Configuration error",
            prefixSeparator,
            issueSeparator
        });
        // The output validationErr.message looks like
        // `Configuration error$prefix$xxxx error$issue$yyy error$issue$zzz error`
        const [prefix, reason] = validationErr.message.split(prefixSeparator);
        const reasonItem = reason.split(issueSeparator);
        const friendlyErr = new Error(`${prefix}:\n${reasonItem.map(item => `- ${item}`).join("\n")}`);
        if (strategy === "loose") {
            console.error(friendlyErr.message);
        }
        else {
            throw friendlyErr;
        }
    }
}
exports.validate = validate;
function isValidate(opts, schema) {
    try {
        validate(opts, schema);
        return true;
    }
    catch {
        return false;
    }
}
exports.isValidate = isValidate;
