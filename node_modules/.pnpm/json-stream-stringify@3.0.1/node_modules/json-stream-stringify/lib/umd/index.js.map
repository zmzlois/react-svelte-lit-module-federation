{"version":3,"file":"index.js","sources":["../../src/JsonStreamStringify.ts"],"sourcesContent":["import { Readable } from 'stream';\n\n// eslint-disable-next-line no-control-regex, no-misleading-character-class\nconst rxEscapable = /[\\\\\"\\u0000-\\u001f\\u007f-\\u009f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g;\n\n// table of character substitutions\nconst meta = {\n  '\\b': '\\\\b',\n  '\\t': '\\\\t',\n  '\\n': '\\\\n',\n  '\\f': '\\\\f',\n  '\\r': '\\\\r',\n  '\"': '\\\\\"',\n  '\\\\': '\\\\\\\\',\n};\n\nfunction isReadableStream(value): boolean {\n  return typeof value.read === 'function'\n      && typeof value.pause === 'function'\n      && typeof value.resume === 'function'\n      && typeof value.pipe === 'function'\n      && typeof value.once === 'function'\n      && typeof value.removeListener === 'function';\n}\n\nenum Types {\n  Array,\n  Object,\n  ReadableString,\n  ReadableObject,\n  Primitive,\n  Promise,\n}\n\nfunction getType(value): Types {\n  if (!value) return Types.Primitive;\n  if (typeof value.then === 'function') return Types.Promise;\n  if (isReadableStream(value)) return value._readableState.objectMode ? Types.ReadableObject : Types.ReadableString;\n  if (Array.isArray(value)) return Types.Array;\n  if (typeof value === 'object' || value instanceof Object) return Types.Object;\n  return Types.Primitive;\n}\n\nconst stackItemOpen = [];\nstackItemOpen[Types.Array] = '[';\nstackItemOpen[Types.Object] = '{';\nstackItemOpen[Types.ReadableString] = '\"';\nstackItemOpen[Types.ReadableObject] = '[';\n\nconst stackItemEnd = [];\nstackItemEnd[Types.Array] = ']';\nstackItemEnd[Types.Object] = '}';\nstackItemEnd[Types.ReadableString] = '\"';\nstackItemEnd[Types.ReadableObject] = ']';\n\nconst processFunctionLookupTable = [\n  'processArray',\n  'processObject',\n  'processReadableString',\n  'processReadableObject',\n  'processPrimitive',\n  'processPromise',\n];\n/*\nfor (const [key, val] of Object.entries(Types)) {\n  if (typeof val === 'number') processFunctionLookupTable[val] = `process${key}`;\n}\n*/\n\nfunction escapeString(string) {\n  // Modified code, original code by Douglas Crockford\n  // Original: https://github.com/douglascrockford/JSON-js/blob/master/json2.js\n\n  // If the string contains no control characters, no quote characters, and no\n  // backslash characters, then we can safely slap some quotes around it.\n  // Otherwise we must also replace the offending characters with safe escape\n  // sequences.\n\n  return string.replace(rxEscapable, (a) => {\n    const c = meta[a];\n    return typeof c === 'string' ? c : `\\\\u${a.charCodeAt(0).toString(16).padStart(4, '0')}`;\n  });\n}\n\nfunction quoteString(string: string) {\n  return `\"${escapeString(string)}\"`;\n}\n\nfunction readAsPromised(stream, size) {\n  const value = stream.read(size);\n  if (value === null) {\n    return new Promise((resolve, reject) => {\n      const endListener = () => resolve(null);\n      stream.once('end', endListener);\n      stream.once('error', reject);\n      stream.once('readable', () => {\n        stream.removeListener('end', endListener);\n        stream.removeListener('error', reject);\n        resolve(stream.read());\n      });\n    });\n  }\n  return Promise.resolve(value);\n}\n\nfunction recursiveResolve(promise: Promise<any>): Promise<any> {\n  return promise.then((res) => (getType(res) === Types.Promise ? recursiveResolve(res) : res));\n}\n\ninterface IStackItem {\n  key?: string;\n  index?: number;\n  type: Types;\n  value: any;\n  parent?: IStackItem;\n  first: boolean;\n  unread?: string[] | number;\n  isEmpty?: boolean;\n  arrayLength?: number;\n  readCount?: number;\n  end?: boolean;\n  addSeparatorAfterEnd?: boolean;\n}\n\ninterface IStackItemArray extends IStackItem {\n  unread: number;\n  isEmpty: boolean;\n  arrayLength: number;\n}\n\ninterface IStackItemObject extends IStackItem {\n  unread: string[];\n}\n\ntype VisitedWeakMap = WeakMap<any, string>;\ntype VisitedWeakSet = WeakSet<any>;\n\nexport class JsonStreamStringify extends Readable {\n  private visited: VisitedWeakMap | VisitedWeakSet;\n  private stack: IStackItem[] = [];\n  private replacerFunction?: Function;\n  private replacerArray?: any[];\n  private gap?: string;\n  private depth: number = 0;\n  private error: boolean;\n  private pushCalled: boolean = false;\n  private end: boolean = false;\n  private isReading: boolean = false;\n  private readMore: boolean = false;\n\n  constructor(value, replacer?: Function | any[], spaces?: number | string, private cycle: boolean = false) {\n    super({ encoding: 'utf8' });\n    const spaceType = typeof spaces;\n    if (spaceType === 'string' || spaceType === 'number') {\n      this.gap = Number.isFinite(spaces as number) ? ' '.repeat(spaces as number) : spaces as string;\n    }\n    Object.assign(this, {\n      visited: cycle ? new WeakMap() : new WeakSet(),\n      replacerFunction: replacer instanceof Function && replacer,\n      replacerArray: Array.isArray(replacer) && replacer,\n    });\n    if (replacer instanceof Function) this.replacerFunction = replacer;\n    if (Array.isArray(replacer)) this.replacerArray = replacer;\n    this.addToStack(value);\n  }\n\n  private cycler(key: string | number | undefined, value: any) {\n    const existingPath = (this.visited as VisitedWeakMap).get(value);\n    if (existingPath) {\n      return {\n        $ref: existingPath,\n      };\n    }\n    let path = this.path();\n    if (key !== undefined) path.push(key);\n    path = path.map((v) => `[${(Number.isInteger(v as number) ? v : quoteString(v as string))}]`);\n    (this.visited as VisitedWeakMap).set(value, path.length ? `$${path.join('')}` : '$');\n    return value;\n  }\n\n  private addToStack(value: any, key?: string, index?: number, parent?: IStackItem) {\n    let realValue = value;\n    if (this.replacerFunction) {\n      realValue = this.replacerFunction(key || index, realValue, this);\n    }\n    // ORDER?\n    if (realValue && realValue.toJSON instanceof Function) {\n      realValue = realValue.toJSON();\n    }\n    if (realValue instanceof Function || typeof value === 'symbol') {\n      realValue = undefined;\n    }\n    if (key !== undefined && this.replacerArray) {\n      if (!this.replacerArray.includes(key)) {\n        realValue = undefined;\n      }\n    }\n    let type = getType(realValue);\n    if (((parent && parent.type === Types.Array) ? true : realValue !== undefined) && type !== Types.Promise) {\n      if (parent && !parent.first) {\n        this._push(',');\n      }\n      // eslint-disable-next-line no-param-reassign\n      if (parent) parent.first = false;\n    }\n    if (realValue !== undefined && type !== Types.Promise && key !== undefined) {\n      if (this.gap) {\n        this._push(`\\n${this.gap.repeat(this.depth)}\"${escapeString(key)}\": `);\n      } else {\n        this._push(`\"${escapeString(key)}\":`);\n      }\n    }\n    if (type !== Types.Primitive) {\n      if (this.cycle) {\n        // run cycler\n        realValue = this.cycler(key || index, realValue);\n        type = getType(realValue);\n      } else {\n        // check for circular structure\n        if (this.visited.has(realValue)) {\n          throw Object.assign(new Error('Converting circular structure to JSON'), {\n            realValue,\n            key: key || index,\n          });\n        }\n        (this.visited as VisitedWeakSet).add(realValue);\n      }\n    }\n\n    if (!key && index > -1 && this.depth && this.gap) this._push(`\\n${this.gap.repeat(this.depth)}`);\n\n    const open = stackItemOpen[type];\n    if (open) this._push(open);\n\n    const obj: IStackItem = {\n      key,\n      index,\n      type,\n      parent,\n      value: realValue,\n      first: true,\n    };\n\n    if (type === Types.Object) {\n      this.depth += 1;\n      obj.unread = Object.keys(realValue);\n      obj.isEmpty = !obj.unread.length;\n    } else if (type === Types.Array) {\n      this.depth += 1;\n      obj.unread = realValue.length;\n      obj.arrayLength = <number>obj.unread;\n      obj.isEmpty = !obj.unread;\n    } else if (type === Types.ReadableString || type === Types.ReadableObject) {\n      this.depth += 1;\n      if (realValue.readableEnded || realValue._readableState?.endEmitted) {\n        this.emit('error', new Error('Readable Stream has ended before it was serialized. All stream data have been lost'), realValue, key || index);\n      } else if (realValue.readableFlowing || realValue._readableState?.flowing) {\n        realValue.pause();\n        this.emit('error', new Error('Readable Stream is in flowing mode, data may have been lost. Trying to pause stream.'), realValue, key || index);\n      }\n      obj.readCount = 0;\n      realValue.once('end', () => {\n        obj.end = true;\n        this.__read();\n      });\n      realValue.once('error', (err) => {\n        this.error = true;\n        this.emit('error', err);\n      });\n    }\n    this.stack.unshift(obj);\n    return obj;\n  }\n\n  private removeFromStack(item: IStackItem) {\n    const {\n      type,\n    } = item;\n    const isObject = type === Types.Object || type === Types.Array || type === Types.ReadableString || type === Types.ReadableObject;\n    if (type !== Types.Primitive) {\n      if (!this.cycle) {\n        this.visited.delete(item.value);\n      }\n      if (isObject) {\n        this.depth -= 1;\n      }\n    }\n\n    const end = stackItemEnd[type];\n    if (isObject && !item.isEmpty && this.gap) this._push(`\\n${this.gap.repeat(this.depth)}`);\n    if (end) this._push(end);\n    const stackIndex = this.stack.indexOf(item);\n    this.stack.splice(stackIndex, 1);\n  }\n\n  // tslint:disable-next-line:function-name\n  private _push(data) {\n    this.pushCalled = true;\n    this.push(data);\n  }\n\n  private processReadableObject(current: IStackItem, size: number) {\n    if (current.end) {\n      this.removeFromStack(current);\n      return undefined;\n    }\n    return readAsPromised(current.value, size)\n      .then((value) => {\n        if (value !== null) {\n          if (!current.first) {\n            this._push(',');\n          }\n          // eslint-disable-next-line no-param-reassign\n          current.first = false;\n          this.addToStack(value, undefined, current.readCount);\n          // eslint-disable-next-line no-param-reassign\n          current.readCount += 1;\n        }\n      });\n  }\n\n  private processObject(current: IStackItemObject) {\n    // when no keys left, remove obj from stack\n    if (!current.unread.length) {\n      this.removeFromStack(current);\n      return;\n    }\n    const key = current.unread.shift();\n    const value = current.value[key];\n    this.addToStack(value, key, undefined, current);\n  }\n\n  private processArray(current: IStackItemArray) {\n    const key = <number>current.unread;\n    if (!key) {\n      this.removeFromStack(current);\n      return;\n    }\n    const index = current.arrayLength - key;\n    const value = current.value[index];\n    // eslint-disable-next-line no-param-reassign\n    current.unread -= 1;\n    this.addToStack(value, undefined, index, current);\n  }\n\n  processPrimitive(current: IStackItem) {\n    if (current.value !== undefined) {\n      const type = typeof current.value;\n      let value;\n      switch (type) {\n        case 'string':\n          value = quoteString(current.value);\n          break;\n        case 'number':\n          value = Number.isFinite(current.value) ? String(current.value) : 'null';\n          break;\n        case 'bigint':\n          value = String(current.value);\n          break;\n        case 'boolean':\n          value = String(current.value);\n          break;\n        case 'object':\n          if (!current.value) {\n            value = 'null';\n            break;\n          }\n        // eslint-disable-next-line no-fallthrough\n        default:\n          // This should never happen, I can't imagine a situation where this executes.\n          // If you find a way, please open a ticket or PR\n          throw Object.assign(new Error(`Unknown type \"${type}\". Please file an issue!`), {\n            value: current.value,\n          });\n      }\n      this._push(value);\n    } else if (this.stack[1] && (this.stack[1].type === Types.Array || this.stack[1].type === Types.ReadableObject)) {\n      this._push('null');\n    } else {\n      // eslint-disable-next-line no-param-reassign\n      current.addSeparatorAfterEnd = false;\n    }\n    this.removeFromStack(current);\n  }\n\n  private processReadableString(current: IStackItem, size: number) {\n    if (current.end) {\n      this.removeFromStack(current);\n      return undefined;\n    }\n    return readAsPromised(current.value, size)\n      .then((value) => {\n        if (value) this._push(escapeString(value.toString()));\n      });\n  }\n\n  private processPromise(current: IStackItem) {\n    return recursiveResolve(current.value).then((value) => {\n      this.removeFromStack(current);\n      this.addToStack(value, current.key, current.index, current.parent);\n    });\n  }\n\n  private processStackTopItem(size: number) {\n    const current = this.stack[0];\n    if (!current || this.error) return Promise.resolve();\n    let out;\n    try {\n      out = this[processFunctionLookupTable[current.type]](current, size);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    return Promise.resolve(out)\n      .then(() => {\n        if (this.stack.length === 0) {\n          this.end = true;\n          this._push(null);\n        }\n      });\n  }\n\n  // tslint:disable-next-line:function-name\n  private __read(size?: number) {\n    if (this.isReading || this.error) {\n      this.readMore = true;\n      return undefined;\n    }\n    this.isReading = true;\n\n    // we must continue to read while push has not been called\n    this.readMore = false;\n    return this.processStackTopItem(size)\n      .then(() => {\n        const readAgain = !this.end && !this.error && (this.readMore || !this.pushCalled);\n        if (readAgain) {\n          setImmediate(() => {\n            this.isReading = false;\n            this.__read();\n          });\n        } else {\n          this.isReading = false;\n        }\n      })\n      .catch((err) => {\n        this.error = true;\n        this.emit('error', err);\n      });\n  }\n\n  // tslint:disable-next-line:function-name\n  _read(size: number) {\n    this.pushCalled = false;\n    this.__read(size);\n  }\n\n  path() {\n    return this.stack.map(({\n      key,\n      index,\n    }) => key || index).filter((v) => v || v > -1).reverse();\n  }\n}\n"],"names":["rxEscapable","meta","isReadableStream","value","read","pause","resume","pipe","once","removeListener","Types","getType","Primitive","then","Promise","_readableState","objectMode","ReadableObject","ReadableString","Array","isArray","Object","stackItemOpen","stackItemEnd","processFunctionLookupTable","escapeString","string","replace","a","c","charCodeAt","toString","padStart","quoteString","readAsPromised","stream","size","resolve","reject","endListener","recursiveResolve","promise","res","JsonStreamStringify","replacer","spaces","cycle","encoding","spaceType","gap","Number","isFinite","repeat","assign","visited","WeakMap","WeakSet","replacerFunction","Function","replacerArray","addToStack","key","existingPath","get","$ref","path","undefined","push","map","v","isInteger","set","length","join","index","parent","realValue","toJSON","includes","type","first","_push","depth","cycler","has","Error","add","open","obj","unread","keys","isEmpty","arrayLength","readableEnded","endEmitted","emit","readableFlowing","flowing","readCount","end","__read","err","error","stack","unshift","item","isObject","stackIndex","indexOf","splice","data","pushCalled","current","removeFromStack","shift","String","addSeparatorAfterEnd","out","isReading","readMore","processStackTopItem","readAgain","setImmediate","filter","reverse","Readable"],"mappings":"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"}